rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      let isAuth = request.auth != null;
      let uid = request.auth.uid;
      let adminDocPath = /databases/(default)/documents/admins/$(uid);
      let exists = firestore.exists(adminDocPath);
      return isAuth && exists;
    }

    // Allow vehicle images
    match /vehicles/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Allow testimonial images
    match /testimonials/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Allow promotion images
    match /promotions/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Allow hero video uploads (admin only)
    match /hero-section/{videoId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Default rule - deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 